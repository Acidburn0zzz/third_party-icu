Index: i18n/number_affixutils.cpp
===================================================================
--- i18n/number_affixutils.cpp	(revision 40625)
+++ i18n/number_affixutils.cpp	(working copy)
@@ -8,8 +8,9 @@
 #include "number_affixutils.h"
 #include "unicode/utf16.h"
 
+using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
-using namespace icu;
 
 int32_t AffixUtils::estimateLength(const CharSequence &patternString, UErrorCode &status) {
     AffixPatternState state = STATE_BASE;
Index: i18n/number_compact.cpp
===================================================================
--- i18n/number_compact.cpp	(revision 40625)
+++ i18n/number_compact.cpp	(working copy)
@@ -13,8 +13,9 @@
 #include "charstr.h"
 #include "uresimp.h"
 
+using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
-using namespace icu;
 
 namespace {
 
Index: i18n/number_decimalquantity.cpp
===================================================================
--- i18n/number_decimalquantity.cpp	(revision 40625)
+++ i18n/number_decimalquantity.cpp	(working copy)
@@ -16,8 +16,9 @@
 #include "number_roundingutils.h"
 #include "unicode/plurrule.h"
 
+using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
-using namespace icu;
 
 namespace {
 
Index: i18n/number_decimfmtprops.cpp
===================================================================
--- i18n/number_decimfmtprops.cpp	(revision 40625)
+++ i18n/number_decimfmtprops.cpp	(working copy)
@@ -7,6 +7,8 @@
 
 #include "number_decimfmtprops.h"
 
+using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
 
 DecimalFormatProperties::DecimalFormatProperties() {
Index: i18n/number_formatimpl.cpp
===================================================================
--- i18n/number_formatimpl.cpp	(revision 40625)
+++ i18n/number_formatimpl.cpp	(working copy)
@@ -19,6 +19,7 @@
 #include "number_compact.h"
 
 using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
 
 namespace {
Index: i18n/number_grouping.cpp
===================================================================
--- i18n/number_grouping.cpp	(revision 40625)
+++ i18n/number_grouping.cpp	(working copy)
@@ -8,7 +8,9 @@
 #include "unicode/numberformatter.h"
 #include "number_patternstring.h"
 
+using namespace icu;
 using namespace icu::number;
+using namespace icu::number::impl;
 
 Grouper Grouper::defaults() {
     return {-2, -2, false};
Index: i18n/number_integerwidth.cpp
===================================================================
--- i18n/number_integerwidth.cpp	(revision 40625)
+++ i18n/number_integerwidth.cpp	(working copy)
@@ -9,6 +9,7 @@
 #include "number_types.h"
 #include "number_decimalquantity.h"
 
+using namespace icu;
 using namespace icu::number;
 using namespace icu::number::impl;
 
Index: i18n/number_longnames.cpp
===================================================================
--- i18n/number_longnames.cpp	(revision 40625)
+++ i18n/number_longnames.cpp	(working copy)
@@ -14,6 +14,7 @@
 #include "cstring.h"
 
 using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
 
 namespace {
Index: i18n/number_modifiers.cpp
===================================================================
--- i18n/number_modifiers.cpp	(revision 40625)
+++ i18n/number_modifiers.cpp	(working copy)
@@ -11,6 +11,7 @@
 #include "number_modifiers.h"
 
 using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
 
 namespace {
Index: i18n/number_notation.cpp
===================================================================
--- i18n/number_notation.cpp	(revision 40625)
+++ i18n/number_notation.cpp	(working copy)
@@ -8,6 +8,7 @@
 #include "unicode/numberformatter.h"
 #include "number_types.h"
 
+using namespace icu;
 using namespace icu::number;
 using namespace icu::number::impl;
 
Index: i18n/number_padding.cpp
===================================================================
--- i18n/number_padding.cpp	(revision 40625)
+++ i18n/number_padding.cpp	(working copy)
@@ -9,6 +9,8 @@
 #include "number_types.h"
 #include "number_stringbuilder.h"
 
+using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
 
 namespace {
Index: i18n/number_patternmodifier.cpp
===================================================================
--- i18n/number_patternmodifier.cpp	(revision 40625)
+++ i18n/number_patternmodifier.cpp	(working copy)
@@ -12,6 +12,7 @@
 #include "unicode/unistr.h"
 
 using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
 
 MutablePatternModifier::MutablePatternModifier(bool isStrong) : fStrong(isStrong) {}
Index: i18n/number_patternstring.cpp
===================================================================
--- i18n/number_patternstring.cpp	(revision 40625)
+++ i18n/number_patternstring.cpp	(working copy)
@@ -11,6 +11,7 @@
 #include "number_utils.h"
 
 using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
 
 void PatternParser::parseToPatternInfo(const UnicodeString& patternString, ParsedPatternInfo& patternInfo, UErrorCode &status) {
Index: i18n/number_rounding.cpp
===================================================================
--- i18n/number_rounding.cpp	(revision 40625)
+++ i18n/number_rounding.cpp	(working copy)
@@ -10,6 +10,7 @@
 #include "number_types.h"
 #include "number_decimalquantity.h"
 
+using namespace icu;
 using namespace icu::number;
 using namespace icu::number::impl;
 
Index: i18n/number_scientific.cpp
===================================================================
--- i18n/number_scientific.cpp	(revision 40625)
+++ i18n/number_scientific.cpp	(working copy)
@@ -11,6 +11,8 @@
 #include "number_stringbuilder.h"
 #include "unicode/unum.h"
 
+using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
 
 // NOTE: The object lifecycle of ScientificModifier and ScientificHandler differ greatly in Java and C++.
Index: i18n/number_stringbuilder.cpp
===================================================================
--- i18n/number_stringbuilder.cpp	(revision 40625)
+++ i18n/number_stringbuilder.cpp	(working copy)
@@ -10,6 +10,7 @@
 #include "uvectr32.h"
 
 using namespace icu;
+using namespace icu::number;
 using namespace icu::number::impl;
 
 namespace {
